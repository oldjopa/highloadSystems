# Docker Compose configuration for a Spring Boot application with PostgreSQL

services:
  # PostgreSQL Database Service with Health Check (might be optional)
  db:
    image: postgres:16
    container_name: postgres-db
    environment:
      POSTGRES_DB: appdb
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: apppass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U appuser -d appdb"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s
    restart: unless-stopped
    networks:
      - app-network

    # Spring Boot Application Service, depends on the database service and builds from the local Dockerfile
  app:
    build: .
    container_name: spring-boot-app
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_HOST: db
      DB_PORT: 5432
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_DATASOURCE_USERNAME: appuser
      SPRING_DATASOURCE_PASSWORD: apppass
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
